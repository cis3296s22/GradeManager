{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anja_\\\\OneDrive\\\\Documents\\\\GitHub\\\\prj-grademanager\\\\grade_manager\\\\src\\\\js\\\\Course.js\",\n    _s = $RefreshSig$();\n\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { FaPlus } from \"react-icons/fa\";\nimport InputGroup from \"react-bootstrap/InputGroup\"; // import Form from \"react-bootstrap/Form\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* stored as a variable and added to the mapping?\r\n  display course card that takes in input values to send data*/\n}\n{\n  /* display course card pulled from backend */\n}\n\nfunction Course() {\n  _s();\n\n  // const newAssignment =\n  function addCourseTab(key) {\n    if (key === \"addNewCourse\") {\n      console.log(\"add new course tab\");\n    } else {\n      console.log(\"just clicking through the course tabs\");\n    }\n  }\n\n  function addAssignment() {\n    //   fill in\n    console.log(\"add assignment\");\n  } // ********************************************************\n  //   NOT WORKING on dropdown below\n\n\n  const [show, setShow] = useState(false);\n\n  const showDropdown = () => {\n    console.log(show);\n    setShow(true);\n  };\n\n  const hideDropdown = () => {\n    console.log(show);\n    setShow(false);\n  }; // ********************************************************\n\n\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    defaultActiveKey: \"profile\",\n    id: \"uncontrolled-tab-example\",\n    className: \"mb-3\",\n    onSelect: addCourseTab,\n    children: [/*#__PURE__*/_jsxDEV(Tab, {\n      eventKey: \"SoftwareDesign\",\n      title: \"Software Design\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        style: {\n          width: \"35rem\",\n          color: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                \"aria-label\": \"Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown // error has to be with the function call?\n              , {\n                onMouseOver: () => console.log(\"onMouseOver\"),\n                onMouseEnter: () => console.log(\"onMouseEnter\"),\n                onMouseLeave: () => console.log(\"onMouseLeave\") //   onMouseEnter={() => showDropdown()}\n                //   onMouseLeave={() => hideDropdown()}\n                ,\n                show: show,\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                  variant: \"success\",\n                  id: \"dropdown-basic\",\n                  children: \"Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#/action-1\",\n                    children: \"Quiz\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#/action-2\",\n                    children: \"Assignments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#/action-3\",\n                    children: \"Attendance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                \"aria-label\": \"Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              onClick: addAssignment,\n              children: [\" \", /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), \" Add Assignment \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n      eventKey: \"profile\",\n      title: \"Profile\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        style: {\n          width: \"35rem\",\n          color: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Primary Card Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n      eventKey: \"addNewCourse\",\n      title: \"Add Course\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        style: {\n          width: \"35rem\",\n          color: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Primary Card Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Course, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = Course;\nexport default Course; // Course card would take input from the user to enter assignments\n// types of assignments should be added by the user\n// https://react-bootstrap.github.io/components/tabs/\n\nvar _c;\n\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"sources":["C:/Users/anja_/OneDrive/Documents/GitHub/prj-grademanager/grade_manager/src/js/Course.js"],"names":["Tabs","Tab","Card","Button","FaPlus","InputGroup","FormControl","Dropdown","DropdownButton","useState","Course","addCourseTab","key","console","log","addAssignment","show","setShow","showDropdown","hideDropdown","width","color"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA;AACE;AACF;AACC;AAED;AACE;AACD;;AAED,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,QAAIA,GAAG,KAAK,cAAZ,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;AACF;;AACD,WAASC,aAAT,GAAyB;AACvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAZe,CAchB;AACF;;;AACE,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzBL,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzBN,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD,CAtBgB,CA2BhB;;;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,gBAAgB,EAAC,SADnB;AAEE,IAAA,EAAE,EAAC,0BAFL;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,QAAQ,EAAEN,YAJZ;AAAA,4BAME,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC,iBAArC;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAA9B;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kCAGE;AAAA,oCACE,QAAC,UAAD;AAAA,sCACE,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AAAa,8BAAW;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAIE,QAAC,QAAD,CACE;AADF;AAEE,gBAAA,WAAW,EAAE,MAAMR,OAAO,CAACC,GAAR,CAAY,aAAZ,CAFrB;AAGE,gBAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,cAAZ,CAHtB;AAIE,gBAAA,YAAY,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,cAAZ,CAJtB,CAKE;AACA;AANF;AAOE,gBAAA,IAAI,EAAEE,IAPR;AAAA,wCASE,QAAC,QAAD,CAAU,MAAV;AAAiB,kBAAA,OAAO,EAAC,SAAzB;AAAmC,kBAAA,EAAE,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eAaE,QAAC,QAAD,CAAU,IAAV;AAAA,0CACE,QAAC,QAAD,CAAU,IAAV;AAAe,oBAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,QAAD,CAAU,IAAV;AAAe,oBAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,QAAC,QAAD,CAAU,IAAV;AAAe,oBAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAiDE,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjDF,eAkDE,QAAC,WAAD;AAAa,8BAAW;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAqDE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,iBAAhB;AAAkC,cAAA,OAAO,EAAED,aAA3C;AAAA,yBACG,GADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGG,kBAHH;AAAA;AAAA;AAAA;AAAA;AAAA,oBArDF,EAyDY,GAzDZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eA8DE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA,kBA9DF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eA2EE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAC,SAA9B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAA9B;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3EF,eAwFE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC,YAAnC;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAA9B;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuGD;;GApIQX,M;;KAAAA,M;AAsIT,eAAeA,MAAf,C,CAEA;AACA;AAEA","sourcesContent":["import Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n// import Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport { useState } from \"react\";\r\n{\r\n  /* stored as a variable and added to the mapping?\r\n display course card that takes in input values to send data*/\r\n}\r\n\r\n{\r\n  /* display course card pulled from backend */\r\n}\r\n\r\nfunction Course() {\r\n  // const newAssignment =\r\n  function addCourseTab(key) {\r\n    if (key === \"addNewCourse\") {\r\n      console.log(\"add new course tab\");\r\n    } else {\r\n      console.log(\"just clicking through the course tabs\");\r\n    }\r\n  }\r\n  function addAssignment() {\r\n    //   fill in\r\n    console.log(\"add assignment\");\r\n  }\r\n\r\n  // ********************************************************\r\n//   NOT WORKING on dropdown below\r\n  const [show, setShow] = useState(false);\r\n\r\n  const showDropdown = () => {\r\n    console.log(show);\r\n    setShow(true);\r\n  };\r\n  const hideDropdown = () => {\r\n    console.log(show);\r\n    setShow(false);\r\n  };\r\n\r\n  // ********************************************************\r\n\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey=\"profile\"\r\n      id=\"uncontrolled-tab-example\"\r\n      className=\"mb-3\"\r\n      onSelect={addCourseTab}\r\n    >\r\n      <Tab eventKey=\"SoftwareDesign\" title=\"Software Design\">\r\n        <Card border=\"primary\" style={{ width: \"35rem\", color: \"black\" }}>\r\n          <Card.Header>Grades</Card.Header>\r\n          <Card.Body>\r\n            {/* <Card.Title>Primary Card Title</Card.Title> */}\r\n            {/* is this div necessary? */}\r\n            <div>\r\n              <InputGroup>\r\n                <InputGroup.Text>Assignment</InputGroup.Text>\r\n                <FormControl aria-label=\"Assignment\" />\r\n                {/* group should be a dropdown with the ability to add new groups */}\r\n                <Dropdown\r\n                  // error has to be with the function call?\r\n                  onMouseOver={() => console.log(\"onMouseOver\")}\r\n                  onMouseEnter={() => console.log(\"onMouseEnter\")}\r\n                  onMouseLeave={() => console.log(\"onMouseLeave\")}\r\n                  //   onMouseEnter={() => showDropdown()}\r\n                  //   onMouseLeave={() => hideDropdown()}\r\n                  show={show}\r\n                >\r\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    Group\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">Quiz</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">Assignments</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">Attendance</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n                {/* ************************************************************ */}\r\n\r\n                {/* <DropdownButton\r\n                  id=\"dropdown-basic-button\"\r\n                  title=\"Group\"\r\n                  variant=\"secondary\"\r\n                  show={show}\r\n                  //   showDropdown hideDropdown\r\n                  onMouseEnter={console.log(\"mouse hovering\")}\r\n                  onMouseLeave={console.log(\"mouse NOT hovering\")}\r\n                >\r\n                  <Dropdown.Item href=\"#/action-1\">Quiz</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">Assignments</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">Attendence</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\"> */}\r\n                {/* <DropdownButton\r\n                      id=\"dropdown-basic-button-Add-Group\"\r\n                      title=\"Add Group\"\r\n                      variant=\"secondary\"\r\n                    ></DropdownButton> */}\r\n                {/* </Dropdown.Item>\r\n                </DropdownButton> */}\r\n                {/* ************************************************************ */}\r\n                {/* <InputGroup.Text>Group</InputGroup.Text>\r\n                <FormControl aria-label=\"Group\" /> */}\r\n\r\n                <InputGroup.Text>Grade</InputGroup.Text>\r\n                <FormControl aria-label=\"Grade\" />\r\n              </InputGroup>\r\n              <Button variant=\"outline-success\" onClick={addAssignment}>\r\n                {\" \"}\r\n                <FaPlus />\r\n                {\" Add Assignment \"}\r\n              </Button>{\" \"}\r\n            </div>\r\n            <Card.Text></Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Tab>\r\n      <Tab eventKey=\"profile\" title=\"Profile\">\r\n        <Card border=\"primary\" style={{ width: \"35rem\", color: \"black\" }}>\r\n          <Card.Header>Grades</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Primary Card Title</Card.Title>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the\r\n              bulk of the card's content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Tab>\r\n\r\n      <Tab eventKey=\"addNewCourse\" title=\"Add Course\">\r\n        <Card border=\"primary\" style={{ width: \"35rem\", color: \"black\" }}>\r\n          <Card.Header>Grades</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Primary Card Title</Card.Title>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the\r\n              bulk of the card's content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default Course;\r\n\r\n// Course card would take input from the user to enter assignments\r\n// types of assignments should be added by the user\r\n\r\n// https://react-bootstrap.github.io/components/tabs/\r\n"]},"metadata":{},"sourceType":"module"}